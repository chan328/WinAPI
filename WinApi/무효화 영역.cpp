// 무효화 영역

// 앞의 예제에서 invalidRect 함수를 호출하여 강제로 VM_PAINT 메시지를 발생시켰다.
// VM_PAINT 메시지는 윈도우가 다시 그려져야 할 필요가 있을 때마다 호출되는데
// 다시 그려져야 할 필요가 있다는 말은 무효 영역이 있다는 소리다.

// VM_PAINT의 메시지를 받아 다시 그려지면 무효영역은 없어지고 
// 계산기의 전 영역이 유효영역이 되어 더이상 윈도우를 그리지 않아도 된다.
// 이런식으로 윈도우는 윈도우의 일부가 지워졌을 때 지워진 작업 영역을 무효로
// 만들어 윈도우가 다시 그려지도록 해준다. 
// 마찬가지로 프로그램의 내부에서 윈도우의 모습을 변경 시켰을 때는 
// 변경된 부분이 다시 그려질 수 있도록 강제로 무효화시켜 주어야 하며
// 이때 사용되는 함수가 invalidRect이다.

BOOL invlidateRect(HWND hWnd, CONST Rect *ipRect.BOOL bErase);

// 이 함수는 윈도우의 작업 영역을 무효화 시켜 윈도우로 하여금 WM_PAINT
// 메시지를 해당 윈도우로 보내게 한다.

// 첫번째 인수인 hWnd는 무효화의 대상이 되는 윈도우, 그려져야 할 윈도우의 핸들을 보내준다.

// 두번째 인수인 ipRect는 무효화의 대상이 되는 사각영역을 써 주되 이 값이 NULL이면 
// 윈도우의 모든 값이 다시 그려지므로 확실하지만 오래걸린다.

// 세번째 인수인 bErase는 무효화 되기 전 배경을 지우고 다시 그릴것인지 아니면
// 배경을 지우지 않고 다시 그릴것인지 지정한다.